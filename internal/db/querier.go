// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package db

import (
	"context"

	"github.com/google/uuid"
)

type Querier interface {
	// Count Active Users
	CountUsers(ctx context.Context) (int64, error)
	// User Creation
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	// Deactivate User (soft delete)
	DeactivateUser(ctx context.Context, id uuid.UUID) error
	// Check if Email Exists
	EmailExists(ctx context.Context, email string) (bool, error)
	// User Retrieval by Email (for login)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	// User Retrieval by ID
	GetUserByID(ctx context.Context, id uuid.UUID) (User, error)
	// User Retrieval by Username
	GetUserByUsername(ctx context.Context, username string) (User, error)
	// List All Active Users (with pagination)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]User, error)
	// Reactivate User
	ReactivateUser(ctx context.Context, id uuid.UUID) error
	// Search Users by Name or Email
	SearchUsers(ctx context.Context, arg SearchUsersParams) ([]User, error)
	// Soft Delete User
	SoftDeleteUser(ctx context.Context, id uuid.UUID) error
	// Update User Profile
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
	// Update User Password
	UpdateUserPassword(ctx context.Context, arg UpdateUserPasswordParams) error
	// Check if Username Exists
	UsernameExists(ctx context.Context, username string) (bool, error)
}

var _ Querier = (*Queries)(nil)
